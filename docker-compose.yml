services:
  postgres:
    container_name: online-chat-postgres
    user: ${CONTAINERS_UID}:${CONTAINERS_GID}
    build:
      context: ./services/postgres
      args:
      - "pg_uid=${CONTAINERS_UID}"
      - "pg_gid=${CONTAINERS_GID}"
    ports:
    - 127.0.0.1:${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}

  nginx:
    image: online-chat-nginx
    container_name: online-chat-nginx
    build:
      context: ./services/nginx
      args:
      - "PORT=${NGINX_PORT}"
      - "FRONTEND_PORT=${FRONTEND_PORT}"
      - "BACKEND_PORT=${BACKEND_PORT}"
    ports:
    - ${NGINX_PORT}:${NGINX_PORT}
    volumes:
    - ./services/nginx/logs:/var/log/nginx
    depends_on:
    - frontend
    - backend


  frontend:
    image: online-chat-frontend
    container_name: online-chat-frontend
    user: ${CONTAINERS_UID}:${CONTAINERS_GID}
    build:
      context: ./services/frontend
      target: ${ENVIRONMENT}
    volumes:
    - ./services/frontend:/app
    ports:
    - 127.0.0.1:${FRONTEND_PORT}:${FRONTEND_PORT}
    environment:
      APP_PORT: ${FRONTEND_PORT}


  backend:
    image: online-chat-backend
    container_name: online-chat-backend
    user: ${CONTAINERS_UID}:${CONTAINERS_GID}
    build:
      context: ./services/backend
      target: ${ENVIRONMENT}
    volumes:
    - ./services/backend:/app
    ports:
    - 127.0.0.1:${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      LOG_MODE: ${BACKEND_LOG_MODE}
      NODE_ENV: ${ENVIRONMENT}
      APP_PORT: ${BACKEND_PORT}

      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}