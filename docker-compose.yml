services:
  postgres:
    image: postgres:17.0
    container_name: online-chat-postgres
    user: ${CONTAINERS_UID}:${CONTAINERS_GID}
    ports:
    - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./pg-pdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER: ${DATABASE_USER}
      - POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      - POSTGRES_PORT: ${DATABASE_PORT}

  nginx:
    image: online-chat-nginx
    container_name: online-chat-nginx
    build:
      context: ./services/nginx
      args:
      - "PORT=${NGINX_PORT}"
      - "FRONTEND_PORT=${FRONTEND_PORT}"
      - "BACKEND_PORT=${BACKEND_PORT}"
    ports:
    - ${NGINX_PORT}:${NGINX_PORT}
    volumes:
    - ./services/nginx/logs:/var/log/nginx
    depends_on:
    - frontend
    - backend


  frontend:
    image: online-chat-frontend
    container_name: online-chat-frontend
    user: ${CONTAINERS_UID}:${CONTAINERS_GID}
    build:
      context: ./services/frontend
      target: ${ENVIRONMENT}
    volumes:
    - ./services/frontend:/app
    ports:
    - 127.0.0.1:${FRONTEND_PORT}:${FRONTEND_PORT}
    environment:
      - APP_PORT=${FRONTEND_PORT}


  backend:
    image: online-chat-backend
    container_name: online-chat-backend
    user: ${CONTAINERS_UID}:${CONTAINERS_GID}
    build:
      context: ./services/backend
      target: ${ENVIRONMENT}
    volumes:
    - ./services/backend:/app
    ports:
    - 127.0.0.1:${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      APP_PORT: ${BACKEND_PORT}

      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DIALECT: ${DATABASE_DIALECT}

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}